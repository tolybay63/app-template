package kz.app.appclient;

import kz.app.appclient.service.ClientDao;
import kz.app.appcore.model.DbRec;
import kz.app.appcore.utils.UtDb;
import kz.app.appdata.service.UtEntityData;
import kz.app.appdbtools.repository.Db;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;

@SpringBootTest
public class AppClientTest {

    @Autowired
    Db db;

    @Autowired
     ClientDao clientDao;

    @Test
    public void loadClient_test() throws Exception {
        List<DbRec> res = clientDao.loadClient(0);
        UtDb.outTable(res);
    }

    @Test
    public void saveClient_ins_test() throws Exception {
        DbRec map = new DbRec();
        map.put("name", "Test Save Spring 2");
        map.put("cmtVer", "For Spring");
        map.put("BIN", "023456789012");
        map.put("ContactPerson", "Spring Spring");
        map.put("ContactDetails", "г. Астана, ул. 45б, офис 11, тел. 85-858-85 Spring");
        map.put("Description", "For Spring");
        List<DbRec> res = clientDao.saveClient("ins", map);
        UtDb.outTable(res);
    }

    @Test
    public void saveClient_upd_test() throws Exception {
        DbRec map = new DbRec();
        map.put("id", 1014);
        map.put("name", "Test Save Spring Upd");
        map.put("cmtVer", "For Spring Upd");
/*
        map.put("idBIN", 1023);
        map.put("BIN", "123456789012");
        map.put("idContactPerson", 1024);
        map.put("ContactPerson", "Фамилия И.О. Spring");
        map.put("idContactDetails", 1025);
        map.put("ContactDetails", "г. Астана, Spring");
        map.put("idDescription", 1026);
 */
        map.put("Description", "Test Save Spring Upd Description");
        List<DbRec> res = clientDao.saveClient("upd", map);
        UtDb.outTable(res);
    }

    @Test
    public void deleteClientWithProps_test() throws Exception {
        clientDao.deleteClientWithProps(1014);
    }

/*

    @Test
    public void testSetEntityId() throws Exception {
        List<DbRec> res = db.loadSql("select table_name " +
                "from information_schema.tables t " +
                "where table_schema='public'", null);


        for (DbRec rec : res) {
            String nm = rec.getString("table_name");

            UtEntityData ue = new UtEntityData(db, nm);
            long id = ue.getNextId(nm);

            db.execSql("alter table "+ nm + " alter column id add generated by default as identity (start with "+id + ")", null);
        }
    }

*/

    @Test
    void test2() throws Exception {
        List<Map<String, Object>> lstMap = new ArrayList<>();

        // Пример заполнения списка
        lstMap.add(Map.of("id", 1L, "name", "a"));
        lstMap.add(Map.of("id", 2L, "name", "b"));
        lstMap.add(Map.of("id", 3L, "name", "c"));
        lstMap.add(Map.of("id", 4L, "name", "d"));

        // Получение Set значений id
        Set<Long> idSet = lstMap.stream()
                .map(map -> (Long) map.get("id"))
                .collect(Collectors.toSet());

        // Преобразование Set в строку через запятую
        String idString = idSet.stream()
                .map(String::valueOf)
                .collect(Collectors.joining(", "));

        // Вывод результата
        System.out.println(idString); // Вывод: 1, 2, 3, 4
    }


}
