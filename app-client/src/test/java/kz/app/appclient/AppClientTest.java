package kz.app.appclient;

import kz.app.appclient.service.ClientDao;
import kz.app.appcore.model.DbRec;
import kz.app.appcore.utils.UtCnv;
import kz.app.appcore.utils.UtDb;
import kz.app.appdata.service.UtEntityData;
import kz.app.appdbtools.repository.Db;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.List;

@SpringBootTest
public class AppClientTest {

    @Autowired
    Db db;

    @Autowired
    ClientDao clientDao;

    @Test
    public void testLoad() throws Exception {
        List<DbRec> res = clientDao.loadClient(0);
        UtDb.outTable(res);
    }

    @Test
    public void testSave_ins() throws Exception {
        DbRec map = new DbRec();
        map.put("name", "Test Save Spring");
        map.put("cmtVer", "For Spring");
        map.put("BIN", "123456789012");
        map.put("ContactPerson", "Фамилия И.О. Spring");
        map.put("ContactDetails", "г. Астана, ул. 45б, офис 11, тел. 85-858-85 Spring");
        List<DbRec> res = clientDao.saveClient("ins", map);
        UtDb.outTable(res);
    }

    @Test
    public void testSave_upd() throws Exception {
        DbRec map = new DbRec();
        map.put("id", 1010);
        map.put("name", "Test Save Spring Upd");
        map.put("cmtVer", "For Spring Upd");

        map.put("idBIN", "1023");
        map.put("BIN", "123456789012");
        map.put("idContactPerson", 1024);
        map.put("ContactPerson", "Фамилия И.О. Spring");
        map.put("idContactDetails", 1025);
        map.put("ContactDetails", "г. Астана, Spring");
        map.put("idDescription", 1026);
        map.put("Description", "test 01 Spring Upd");
        List<DbRec> res = clientDao.saveClient("upd", map);
        UtDb.outTable(res);
    }

    @Test
    public void testDelete() throws Exception {
        clientDao.deleteClientWithProps(1016);
    }

    @Test
    public void testSetEntityId() throws Exception {
        List<DbRec> res = db.loadSql("select table_name " +
                "from information_schema.tables t " +
                "where table_schema='public'", null);


        for (DbRec rec : res) {
            String nm = rec.getString("table_name");

            UtEntityData ue = new UtEntityData(db, nm);
            long id = ue.getNextId(nm);

            db.execSql("alter table "+ nm + " alter column id add generated by default as identity (start with "+id + ")", null);
        }
    }


}
